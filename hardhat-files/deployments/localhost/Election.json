{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Election_CandidateDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Election__AlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Election__CandidateAlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "party",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "CandidateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "candidateName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "candidateParty",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "candidateVoteCount",
          "type": "uint256"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_party",
          "type": "string"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "party",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numCandidates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7d69ede3cecdd8be4cc921f0cb3970367e8a308fd5c61241e9e1ee9be9d10b9d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "987511",
    "logsBloom": "0x
    "blockHash": "0x321240b3326858eb42f8fbd1443dfe86db04e195b311f3aa9670f443d82cf3bc",
    "transactionHash": "0x7d69ede3cecdd8be4cc921f0cb3970367e8a308fd5c61241e9e1ee9be9d10b9d",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "987511",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1b12eab718cd98f90a2632fcd8f8c552",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Election_CandidateDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Election__AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Election__CandidateAlreadyExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"party\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"CandidateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"candidateName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"candidateParty\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"candidateVoteCount\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_party\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidates\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"party\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numCandidates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Election.sol\":\"Election\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Election.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nerror Election__AlreadyVoted();\\r\\nerror Election_CandidateDoesNotExist();\\r\\nerror Election__CandidateAlreadyExists();\\r\\n\\r\\ncontract Election {\\r\\n    struct Candidate {\\r\\n        string name;\\r\\n        string party;\\r\\n        uint256 votes;\\r\\n    }\\r\\n\\r\\n    uint256 public numCandidates;\\r\\n    mapping(uint256 => Candidate) public candidates;\\r\\n    mapping(address => bool) public hasVoted;\\r\\n\\r\\n    event CandidateAdded(\\r\\n        string name,\\r\\n        string party,\\r\\n        uint256 indexed votes,\\r\\n        address indexed contractAddress\\r\\n    );\\r\\n    event Voted(\\r\\n        string candidateName,\\r\\n        string candidateParty,\\r\\n        uint256 indexed candidateVoteCount\\r\\n    );\\r\\n\\r\\n    modifier notVoted() {\\r\\n        if (!hasVoted[msg.sender]) {\\r\\n            _;\\r\\n        } else {\\r\\n            revert Election__AlreadyVoted();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        // addCandidate(\\\"Peter Obi\\\", \\\"Labour Party\\\");\\r\\n        // addCandidate(\\\"Bola Tinubu\\\", \\\"All Progressives Congress\\\");\\r\\n        // addCandidate(\\\"Adewole Adebayo\\\", \\\"Social Democratic Party\\\");\\r\\n        // addCandidate(\\\"Atiku Abubakar\\\", \\\"People's Democratic Party\\\");\\r\\n        // addCandidate(\\\"Dumebi Kachikwu\\\", \\\"African Democratic Congress\\\");\\r\\n        // addCandidate(\\\"Hamza Al-Mustapha\\\", \\\"Action Alliance\\\");\\r\\n        // addCandidate(\\\"Kola Abiola\\\", \\\"Peoples Redemption Party\\\");\\r\\n        // addCandidate(\\\"Malik Ado-Ibrahim\\\", \\\"Young Progressive Party\\\");\\r\\n        // addCandidate(\\\"Omoyele Sowore\\\", \\\"African Action Congress\\\");\\r\\n        // addCandidate(\\\"Peter Umeadi\\\", \\\"All Progressives Grand Alliance\\\");\\r\\n    }\\r\\n\\r\\n    function addCandidate(string memory _name, string memory _party) public {\\r\\n        for (uint i = 0; i < numCandidates; i++) {\\r\\n            Candidate memory candidate = candidates[i];\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(candidate.name)) ==\\r\\n                keccak256(abi.encodePacked(_name)) ||\\r\\n                keccak256(abi.encodePacked(candidate.party)) ==\\r\\n                keccak256(abi.encodePacked(_party))\\r\\n            ) {\\r\\n                revert Election__CandidateAlreadyExists();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        candidates[numCandidates] = Candidate(_name, _party, 0);\\r\\n        numCandidates += 1;\\r\\n        emit CandidateAdded(_name, _party, 0, address(this));\\r\\n    }\\r\\n\\r\\n    function vote(uint256 index) public notVoted {\\r\\n        if (index > numCandidates - 1) {\\r\\n            revert Election_CandidateDoesNotExist();\\r\\n        } else {\\r\\n            candidates[index].votes += 1; // this actually updates state\\r\\n            hasVoted[msg.sender] = true;\\r\\n            Candidate memory candidate = candidates[index]; // this \\\"memory\\\" reads from state\\r\\n            emit Voted(candidate.name, candidate.party, candidate.votes);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xef4051d7fa055384c33ee7f47cb874485f72d538ae1e7d5abbbccbe8c4ae8614\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16,
        "contract": "contracts/Election.sol:Election",
        "label": "numCandidates",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 21,
        "contract": "contracts/Election.sol:Election",
        "label": "candidates",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Candidate)14_storage)"
      },
      {
        "astId": 25,
        "contract": "contracts/Election.sol:Election",
        "label": "hasVoted",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Candidate)14_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Election.Candidate)",
        "numberOfBytes": "32",
        "value": "t_struct(Candidate)14_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Candidate)14_storage": {
        "encoding": "inplace",
        "label": "struct Election.Candidate",
        "members": [
          {
            "astId": 9,
            "contract": "contracts/Election.sol:Election",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/Election.sol:Election",
            "label": "party",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "contracts/Election.sol:Election",
            "label": "votes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}